<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AtLeastOneRoleRequired" xml:space="preserve">
    <value>At least one role is required.</value>
  </data>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>Optimistic concurrency failure, object has been modified.</value>
  </data>
  <data name="CurrentPasswordMustContain" xml:space="preserve">
    <value>A current password must contain uppercase and lowercase letters, numbers, and special characters.</value>
  </data>
  <data name="CurrentRasswordRequired" xml:space="preserve">
    <value>Current password is required.</value>
  </data>
  <data name="DataNotFound" xml:space="preserve">
    <value>The requested data was not found.</value>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>An unknown failure has occurred.</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Email '{0}' is already taken.</value>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>Role name '{0}' is already taken.</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>User Name '{0}' is already taken.</value>
  </data>
  <data name="EmailNotSend" xml:space="preserve">
    <value>An error occurred while seending mail.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="EntityWasNotFound" xml:space="preserve">
    <value>Entity "{0}" by ({1}) was not found.</value>
  </data>
  <data name="Forbidden" xml:space="preserve">
    <value>Forbidden</value>
  </data>
  <data name="GroupNameRequired" xml:space="preserve">
    <value>Group name is required. </value>
  </data>
  <data name="IncorrectUsernameOrPassword" xml:space="preserve">
    <value>Incorrect username or password.</value>
  </data>
  <data name="InernalServerError" xml:space="preserve">
    <value>Server side error, please contact the administrator.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Email '{0}' is invalid.</value>
  </data>
  <data name="EmailTooLong" xml:space="preserve">
    <value>Email cannot exceed {0} characters.</value>
  </data>
  <data name="InvalidRefreshToken" xml:space="preserve">
    <value>Refresh token is not valid. </value>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>Role name '{0}' is invalid.</value>
  </data>
  <data name="RoleRequired" xml:space="preserve">
    <value>Role is required.</value>
  </data>
  <data name="InvalidRole" xml:space="preserve">
    <value>Role '{0}' is invalid.</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid token.</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>User name '{0}' is invalid, can only contain letters or digits.</value>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>A user with this login already exists.</value>
  </data>
  <data name="MessageYourselfValidation" xml:space="preserve">
    <value>You cannot send meesage to yourself. </value>
  </data>
  <data name="ModelCanNotBeNull" xml:space="preserve">
    <value>Model can not be null.</value>
  </data>
  <data name="NewPasswordMustContain" xml:space="preserve">
    <value>A new password must contain uppercase and lowercase letters, numbers, and special characters.</value>
  </data>
  <data name="NewPasswordRequired" xml:space="preserve">
    <value>New password is required.</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Passwords mismatch.</value>
  </data>
  <data name="PasswordMustContain" xml:space="preserve">
    <value>The password must contain uppercase and lowercase letters, numbers, and special characters.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Passwords must have at least one digit ('0'-'9').</value>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>Passwords must have at least one lowercase ('a'-'z').</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Passwords must have at least one non alphanumeric character.</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>Passwords must have at least one uppercase ('A'-'Z').</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Passwords must be at least {0} characters.</value>
  </data>
  <data name="PhoneNumberTooLong" xml:space="preserve">
    <value>Phone number cannot exceed {0} characters.</value>
  </data>
  <data name="InvalidPhoneNumber" xml:space="preserve">
    <value>Phone number '{0}' is invalid.</value>
  </data>
  <data name="RefreshTokenRequired" xml:space="preserve">
    <value>Refresh token is required.</value>
  </data>
  <data name="TokenRequired" xml:space="preserve">
    <value>Token is required.</value>
  </data>
  <data name="Unauthorised" xml:space="preserve">
    <value>Unauthorised</value>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>User already has a password set.</value>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>User already in role '{0}'.</value>
  </data>
  <data name="UserExists" xml:space="preserve">
    <value>A user with given username or email already exists, please enter another username or email.</value>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Lockout is not enabled for this user.</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Username is required.</value>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>User is not in role '{0}'.</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First name is required.</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last name is required.</value>
  </data>
  <data name="FirstNameTooLong" xml:space="preserve">
    <value>First name must be at most {0} characters long.</value>
  </data>
  <data name="LastNameTooLong" xml:space="preserve">
    <value>Last name must be at most {0} characters long.</value>
  </data>
  <data name="UserNameTooLong" xml:space="preserve">
    <value>Username must be at most {0} characters long.</value>
  </data>
  <data name="LanguageIdValid" xml:space="preserve">
    <value>Language ID must be greater than 0.</value>
  </data>
</root>